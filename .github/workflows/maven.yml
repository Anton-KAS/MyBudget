# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  install:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'adopt'
          cache: maven
      - name: All the Tests and Coverage Checks
        run: mvn '-Dspring.datasource.url=${{ secrets.PROD_POSTGRESQL_URL }}' '-Dspring.datasource.username=${{ secrets.PROD_POSTGRESQL_USERNAME }}' '-Dspring.datasource.password=${{ secrets.PROD_POSTGRESQL_PASSWORD }}' '-Dtelegram.bot.username=${{ secrets.TEST_TELEGRAM_BOT_USERNAME }}' '-Dtelegram.bot.token=${{ secrets.TEST_TELEGRAM_BOT_TOKEN }}' clean install

  Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive
              - name: Update dependency graph
              uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6
